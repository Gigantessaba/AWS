AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template launches an autoscaling group
  and aplication load balancer.

Parameters:
  VPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: Select at least 2 subnets in different AZs
    Type: List<AWS::EC2::Subnet::Id>
  MyKeyPair:
    Description: Select a valid key pair
    Type: AWS::EC2::KeyPair::KeyName
  AllowedInstanceTypes:
    Description: Select an instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.nano
      - t3.micro
      - m1.small

Mappings:
  RegionAMIsMapping:
    us-east-1:
      AMI: ami-0b5eea76982371e91
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae

Resources:
# - security grp
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Open HTTP, SSH" # Required
      GroupName: "MySecurityGroup"
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
      VpcId: !Ref VPC
# alb
# - listener
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref MyTargetGroup
          Type: "forward"
      LoadBalancerArn: !Ref MyALB # Required
      Port: 80
      Protocol: "HTTP"

# - loadbalancer
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "MyALB"
      SecurityGroups:
        - !GetAtt MySecurityGroup.GroupId
      Subnets: !Ref Subnets
      Type: application
# - targets
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: "HTTP"
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPC

# ag
# - group
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: "ELB"
      LaunchTemplate:
        LaunchTemplateId: !Ref MyTemplate
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs: 
        - !Ref MyTargetGroup
      VPCZoneIdentifier: !Ref Subnets
# - template --security group
  MyTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap
          - RegionAMIsMapping
          - !Ref "AWS::Region"
          - AMI
        InstanceType: !Ref AllowedInstanceTypes
        KeyName: !Ref MyKeyPair
        SecurityGroupIds:
          - !GetAtt MySecurityGroup.GroupId
        UserData: !Base64 |
          #!/bin/bash
          #update os
          yum update -y
          #install apache server
          yum install -y httpd
          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          # get date and time of server
          DATE_TIME=`date`
          # set all permissions
          chmod -R 777 /var/www/html
          # create a custom index.html file
          echo "<html>
              <head>
              <title> Application Load Balancer</title>
              </head>
              <body>
                  <h1>Testing Application Load Balancer</h1>
                  <h2>Congratulations! You have created an instance from Launch Template</h2>
                  <h3>This web server is launched from the launch template by YOUR_NAME</h3>
                  <p>This instance is created at <b>$DATE_TIME</b></p>
                  <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                  <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
              </body>
              </html>" > /var/www/html/index.html
              # start apache server
              systemctl start httpd
              systemctl enable httpd
      LaunchTemplateName: "MyTemplate"
# - policy
  MyScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyAutoScalingGroup # Required
      PolicyType: "TargetTrackingScaling"
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: "ASGAverageCPUUtilization"
        TargetValue: 60.0

Outputs:
  ShowPublicDNS:
    Description: ALB Public DNS
    Value: !Join
      - ''
      - - "http://"
        - !GetAtt MyALB.DNSName

